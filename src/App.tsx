import {useEffect, useMemo, useState} from 'react';
import confetti from 'canvas-confetti';
// Generated by https://quicktype.io

export interface Movie {
  adult: boolean;
  backdrop_path: string;
  genre_ids: number[];
  id: number;
  origin_country: string[];
  original_language: string;
  original_name: string;
  overview: string;
  popularity: number;
  poster_path: string;
  first_air_date: string;
  name: string;
  vote_average: number;
  vote_count: number;
}

async function getRandomMovie(): Promise<Movie> {
  return fetch('https://api.themoviedb.org/3/tv/top_rated?language=en-US&page=1', {
    headers: {
      Authorization: `Bearer ${import.meta.env.VITE_API_TOKEN}`,
    },
  })
    .then((res) => res.json() as Promise<{results: Movie[]}>)
    .then(({results: movies}) => movies[Math.floor(Math.random() * movies.length)]);
}

function getPartialMovieName(movie: Movie): string {
  const difficulty = 20;
  const indexes = Array.from({length: movie.name.length}, (_, index) => index)
    .sort((index) => (movie.name[index] == ' ' ? 1 : Math.random() >= 0.5 ? 1 : -1))
    .slice(0, Math.max(Math.floor((movie.name.length * difficulty) / 100), 1));

  return movie.name.split('').reduce((name, letter, index) => {
    name = name.concat(indexes.includes(index) ? '_' : letter);

    return name;
  }, '');
}

function App() {
  const [movie, setMovie] = useState<null | Movie>(null);
  const [points, setPoints] = useState<number>(0);
  const [lives, setLives] = useState<number>(3);
  const [hintsCount, setHintsCount] = useState<number>(0);
  const [showHint, setShowHint] = useState<boolean>(false);

  const partial = useMemo(() => {
    if (!movie) return '';

    return getPartialMovieName(movie);
  }, [movie]);

  useEffect(() => {
    getRandomMovie().then(setMovie);
  }, [points, lives]);

  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();

    const formDate = new FormData(event.currentTarget);

    const guess = formDate.get('partial')?.toString();

    if (guess?.toLocaleLowerCase() === movie!.name.toLocaleLowerCase()) {
      setPoints((points) => points + 1);
      confetti({
        particleCount: 300,
        spread: 150,
      });
    } else {
      alert('Mal');
      setLives((lives) => lives - 1);
    }

    event.currentTarget.partial.value = '';
    setShowHint(false);
  }

  function handleReset() {
    setLives(3);
    setPoints(0);
    setShowHint(false);
    setHintsCount(0);
  }

  function handleHint() {
    if (!showHint) {
      setHintsCount((hinsCount) => hinsCount + 1);
      setShowHint(true);
    }
  }

  return (
    <main className="container m-auto grid min-h-screen grid-rows-[auto,1fr,auto] px-4">
      <header className="text-xl font-bold leading-[4rem]">zeekit-challenge</header>
      <section>
        <div className="pb-24 text-center text-xl">
          Lives: {lives} - Points: {points} - Hint: {hintsCount}
        </div>

        {!movie ? (
          <p>Loading...</p>
        ) : lives ? (
          <form className="flex flex-col gap-4 py-8 font-mono" onSubmit={handleSubmit}>
            <input readOnly className="p-4 text-xl tracking-wider" type="text" value={partial} />
            <input className="p-4 text-xl tracking-wider" name="partial" type="text" />

            <button className="text-3xl" type="submit">
              Guess
            </button>
            <button className="text-sm italic" type="button" onClick={handleHint}>
              Show hint
            </button>
            {showHint && <p>{movie.overview}</p>}
          </form>
        ) : (
          <div className="flex flex-col items-center gap-6">
            <p className="text-4xl">Game Over</p>
            <button
              className="rounded-md border border-red-700 bg-red-500 px-4 py-2 text-2xl"
              onClick={handleReset}
            >
              Play again
            </button>
          </div>
        )}
      </section>
      <footer className="text-center leading-[4rem] opacity-70">
        Â© {new Date().getFullYear()} zeekit-challenge
      </footer>
    </main>
  );
}

export default App;
